.question id = "question-#{question.id}"
  h1.question-title= question.title
  p.question-body= question.body

  = render 'shared/votes', resource: question

  - if question.files.attached?
    - question.files.each do |file|
      .question-file id = "file-#{file.id}"
        p= link_to file.filename.to_s, url_for(file)

        - if current_user && can?(:destroy, file)
          p= link_to 'Delete', file_path(id: file),
                  remote: true,
                  method: :delete

  = render 'shared/links', resource: question

  - if question.reward.present?
    p Reward:
    = render question.reward

  = render 'questions/inline_edit_form'

  - if current_user && can?(:destroy, question) && can?(:update, question)
    link= link_to 'Delete question', question_path(question), method: :delete
    link= link_to 'Edit question', '#', class: 'edit-question-link', data: { question_id: question.id }

  p
    - if can?(:create, question.subscriptions) && can?(:destroy, question.subscriptions)
      - if current_user.subscribe?(question)
        link= link_to 'Unsubscribe', subscriptions_path(id: current_user.subscribe(question)), method: :delete, remote: true
      - else
        link= link_to 'Subscribe',
                subscriptions_path(question_id: question),
                method: :post,
                remote: true

  = render 'shared/comments', resource: question, current_user: current_user

.best-answer
  -if question.best_answer
    = render question.best_answer
  end

p= 'Answers:'

.answers
  = render without_best

.answer-errors

.create-answer
  p= 'Create new answer:'

  = render 'answers/form'
